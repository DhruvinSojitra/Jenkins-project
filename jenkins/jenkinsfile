pipeline {
    agent {
        label 'devops'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
    }

    parameters {
        string(name: 'ImageName', defaultValue: 'jenkinsapp')
        string(name: 'ImageTag', defaultValue: 'latest')
        string(name: 'ContainerPort', defaultValue: '8088')
        string(name: 'ContainerName', defaultValue: 'jenkinsapp')
    }

    environment {
        DOCKER_REGISTRY_CREDS = credentials('docker-registy-login')
    }

    stages {
        stage('App Code Checkout') {
            steps {
                git url: 'https://github.com/prateekkumawat/jenkins-11am-project.git', branch: 'main'
            }
        }

        stage('Build Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-registy-login', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker build -t ${params.ImageName}:${params.ImageTag} .
                    """
                }
            }
        }

        stage('Push To Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-registy-login', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker tag ${params.ImageName}:${params.ImageTag} $DOCKER_USER/${params.ImageName}:${params.ImageTag}
                        docker push $DOCKER_USER/${params.ImageName}:${params.ImageTag}
                        docker rmi -f ${params.ImageName}:${params.ImageTag}
                        docker rmi -f $DOCKER_USER/${params.ImageName}:${params.ImageTag}
                    """
                }
            }
        }

        stage('Container Create') {
            steps {
                sh """
                    docker rm -f ${params.ContainerName} || true
                    docker run -dit --name ${params.ContainerName} -p ${params.ContainerPort}:80 $DOCKER_REGISTRY_CREDS_USR/${params.ImageName}:${params.ImageTag}
                """
            }
        }
    }
}
