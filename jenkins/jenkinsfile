pipeline {
    agent {
        label 'devops'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
    }

    parameters {
        string(name: 'ImageName', defaultValue: 'jenkinsapp')
        string(name: 'ImageTag', defaultValue: 'latest')
        string(name: 'ContainerPort', defaultValue:'8088')
        string(name: 'ContainerName', defaultValue: 'Jenkinsapp')
    }    
    environment {
        DOCKER_REGISTRY_CREDS = credentials('docker-registy-login')
    }

    stages {
        stage('App code checkout') {
            steps {
                git url: 'https://github.com/DhruvinSojitra/Jenkins-project.git', branch: 'main'
            }
        }

        stage('Build image') {
            steps {
                sh "docker build -t ${params.ImageName}:${params.ImageTag} ."
            }
        }
        stage('push to Registry'){
            steps {
                sh "docker login -u $DOCKER_REGISTRY_CREDS_USR -P $DOCKER_REGISTRY_CREDS_PSW "
                sh " docker tag ${params.ImageName}:${params.ImageTag}  $DOCKER_REGISTRY_CREDS_USR/${params.ImageName}:${params.ImageTag}"
                sh " docker push   $DOCKER_REGISTRY_CREDS_USR/${params.ImageName}:${params.ImageTag}"
                sh "docker rm -f ${params.ImageName}:${params.ImageTag}"
                sh "docker rm -f $DOCKER_REGISTRY_CREDS_USR/${params.ImageName}:${params.ImageTag}"
            }
        }

        stage('Run container') {
            steps {
                 sh ""
                    docker rm -f  ${params.ContainerName} 
                    docker run -dit --name ${params.ContainerName} -p ${params.ContainerPort}:80 ${params.ImageName}:${params.ImageTag}
                ""     
                   }
        }
    }
}
